{"version":3,"sources":["components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Button.js","components/useForm.js","services/partsService.js","components/Parts.js","services/productsService.js","components/Products.js","App.js","index.js"],"names":["Controls","Input","props","name","label","value","error","onChange","TextField","variant","fullWidth","helperText","RadioGroup","items","FormControl","FormLabel","row","map","item","FormControlLabel","id","control","Radio","required","title","Button","text","size","color","onClick","other","useForm","initialValues","validateOnChange","validate","useState","values","setValues","errors","setErrors","handleInputChange","e","target","KEYS","insertPart","data","localStorage","getItem","setItem","JSON","stringify","parse","getAllParts","axios","post","console","log","style","position","top","left","transform","width","bgcolor","boxShadow","p","partName","partStockLevel","partCost","partMin","partMax","partMachineId","partCategory","partsColumns","field","headerName","partsCatergories","require","Parts","partsRows","parts","setParts","open","setOpen","selectionModelParts","setSelectionModelParts","selectedIDs","Set","first","fieldValues","temp","test","Object","every","x","handleOpen","event","handleClose","handleSubmit","preventDefault","partsService","handleEdit","a","put","qs","catch","err","useEffect","fetchParts","get","then","response","height","rows","columns","pageSize","rowsPerPageOptions","components","Toolbar","GridToolbar","initialState","filter","filterModel","columnField","operatorValue","onSelectionModelChange","newSelectionModelParts","selectionModel","align","fetchValues","clickedPart","delete","Modal","onClose","Box","sx","component","onSubmit","Grid","container","rowSpacing","columnSpacing","xs","sm","md","insertProduct","getAllProducts","productName","productStockLevel","productCost","productMin","productMax","productMachineId","productsColumns","Products","productsRows","products","setProducts","selectionModelProducts","setSelectionModelProducts","productsService","fetchProducts","newSelectionModelProducts","clickedProduct","App","Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","palette","secondary","flexGrow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06b33792.chunk.js","sourcesContent":["import Input from \"./Input\";\nimport RadioGroup from \"./RadioGroup\";\nimport Button from \"./Button\";\n\nconst Controls = {\n    Input,\n    RadioGroup,\n    Button\n}\n\nexport default Controls;","import React from 'react'\nimport TextField from '@mui/material/TextField';\n\nexport default function Input(props) {\n\n    const { name, label, value,error=null, onChange } = props;\n    return (\n        <TextField\n            variant=\"standard\"\n            label={label}\n            name={name}\n            value={value}\n            onChange={onChange}\n            fullWidth\n            {...(error && {error:true,helperText:error})}\n        />\n    )\n}","import React from 'react'\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@mui/material';\n\n\nexport default function RadioGroup(props) {\n\n    const { name, label, value, onChange, items } = props;\n\n    return (\n        <FormControl>\n            <FormLabel>{label}</FormLabel>\n            <MuiRadioGroup row\n                name={name}\n                value={value}\n                onChange={onChange}>\n                {\n                    items.map(\n                        item => (\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio required={true} />} label={item.title} />\n                        )\n                    )\n                }\n            </MuiRadioGroup>\n        </FormControl>\n    )\n}","import React from 'react'\nimport {Button as MuiButton} from '@mui/material';\n\nexport default function Button(props) {\n\n    const { text, size, color, variant, onClick, ...other } = props\n\n    return (\n        <MuiButton\n            variant={variant || \"outlined\"}\n            size={size || \"regular\"}\n            color={color || \"primary\"}\n            onClick={onClick}\n            {...other}>\n            {text}\n        </MuiButton>\n    )\n}","import { useState } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nexport default function useForm(\n  initialValues,\n  validateOnChange = false,\n  validate\n) {\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n    if (validateOnChange) validate({ [name]: value });\n    //console.log(values)\n  };\n  return { values, errors, setValues, setErrors, handleInputChange };\n}\n","import axios from \"axios\";\nimport qs from \"qs\";\n\nconst KEYS = {\n  parts: \"parts\",\n  partId: \"partId\",\n};\n\nexport function insertPart(data) {\n  let parts = getAllParts();\n  // data['id'] = generatePartId()\n  // parts.push(data)\n  // localStorage.setItem(KEYS.parts,JSON.stringify(parts))\n  axios.post(\"https://inventoryspring.herokuapp.com/api/v1/parts\", data);\n  console.log(data);\n  console.log(\"Insert Part Running\");\n}\nexport function editPart(data) {\n  axios\n    .put(\"https://inventoryspring.herokuapp.com/api/v1/parts/\" + data.id, qs.stringify(data))\n    .catch((err) => {\n      console.log(err);\n    });\n  console.log(data);\n  console.log(\"Edit Part Running\");\n}\n\nexport function generatePartId() {\n  if (localStorage.getItem(KEYS.partId) == null)\n    localStorage.setItem(KEYS.partId, \"0\");\n  var id = parseInt(localStorage.getItem(KEYS.partId));\n  localStorage.setItem(KEYS.partId, (++id).toString());\n  return id;\n}\n\nexport function getAllParts() {\n  if (localStorage.getItem(KEYS.parts) == null)\n    localStorage.setItem(KEYS.parts, JSON.stringify([]));\n  return JSON.parse(localStorage.getItem(KEYS.parts));\n}\n","import React, { useState, useEffect } from \"react\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport { Grid } from \"@mui/material\";\nimport Controls from \"./controls/Controls\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Paper from \"@mui/material/Paper\";\nimport useForm from \"./useForm\";\nimport * as partsService from \"../services/partsService\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 600,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst initialValues = {\n  id: 0,\n  partName: \"\",\n  partStockLevel: \"\",\n  partCost: \"\",\n  partMin: \"\",\n  partMax: \"\",\n  partMachineId: \"\",\n  partCategory: \"\",\n};\n\nconst partsColumns = [\n  {\n    field: \"id\",\n    headerName: \"ID\",\n    width: 70,\n  },\n  {\n    field: \"partName\",\n    headerName: \"Parts Name\",\n    width: 130,\n  },\n  {\n    field: \"partStockLevel\",\n    headerName: \"Inventory\",\n    width: 130,\n  },\n  {\n    field: \"partCost\",\n    headerName: \"Cost\",\n    width: 130,\n  },\n];\n\nlet partsRows;\n\nconst partsCatergories = [\n  {\n    id: \"inhouse\",\n    title: \"In-House\",\n  },\n  {\n    id: \"outsourced\",\n    title: \"Outsourced\",\n  },\n];\nconst axios = require(\"axios\");\n\nexport default function Parts(...props) {\n  const [parts, setParts] = useState(partsRows);\n  const [open, setOpen] = useState(false);\n  const [selectionModelParts, setSelectionModelParts] = useState([]);\n  const selectedIDs = new Set(selectionModelParts);\n  const [first] = selectedIDs;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    if (\"partName\" in fieldValues)\n      temp.partName = fieldValues.partName ? \"\" : \"This field is required.\";\n    if (\"partStockLevel\" in fieldValues)\n      temp.partStockLevel = /^[0-9]+$/.test(fieldValues.partStockLevel)\n        ? \"\"\n        : \"Please enter a full number with no decimals.\";\n    if (\"partCost\" in fieldValues)\n      temp.partCost = /[+-]?([0-9]*[.])?[0-9]+/.test(fieldValues.partCost)\n        ? \"\"\n        : \"Please enter a number.\";\n    if (\"partMin\" in fieldValues)\n      temp.partMin = /^[0-9]+$/.test(fieldValues.partMin)\n        ? \"\"\n        : \"Please enter a number.\";\n    if (\"partMax\" in fieldValues)\n      temp.partMax = /^[0-9]+$/.test(fieldValues.partMax)\n        ? \"\"\n        : \"Please enter a number.\";\n    if (\"partMachineId\" in fieldValues)\n      temp.partMachineId = /^[0-9]+$/.test(fieldValues.partMachineId)\n        ? \"\"\n        : \"Please enter a number.\";\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues === values)\n      return Object.values(temp).every((x) => x === \"\");\n  };\n\n  const { values, handleInputChange, errors, setErrors, setValues } = useForm(\n    initialValues,\n    true,\n    validate\n  );\n\n  const handleDeletePart = (clickedPart) => {\n    console.log(\"Deleting: \" + selectionModelParts);\n    axios.delete(\"https://inventoryspring.herokuapp.com/api/v1/parts/\" + first);\n    //setParts((r) => r.filter((x) => !selectedIDs.has(x.id)));\n  };\n\n  // const Item = styled(Paper)(({ theme }) => ({\n  //   ...theme.typography.body2,\n  //   padding: theme.spacing(1),\n  //   textAlign: \"center\",\n  //   color: theme.palette.text.secondary,\n  // }));\n\n  const handleModify = () => {\n    const fetchValues = async () => {\n      try {\n        const response = await axios.get(\n          \"https://inventoryspring.herokuapp.com/api/v1/parts/\" + first\n        );\n        console.log(response.data);\n        setValues(response.data);\n      } catch (err) {\n        console.log(err.response.data);\n      }\n    };\n    fetchValues();\n    //console.log(values)\n    handleOpen();\n  };\n  const handleOpen = (event) => {\n    //props.setTitle(\"Add Part\");\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    // props.setTitle(\"Inventory Management System\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      partsService.insertPart(values);\n      console.log(\"Submitted \" + values);\n      handleClose();\n      //setParts(JSON.parse(localStorage.getItem(\"parts\")));\n    }\n  };\n  const handleEdit = async (e) => {\n    e.preventDefault();\n    if (validate()) {\n      partsService.editPart(values);\n      //console.log(\"Edited \" + values);\n      handleClose();\n    }\n  };\n\n  useEffect(() => {\n    const fetchParts = async () => {\n      try {\n        const response = await axios\n          .get(\"https://inventoryspring.herokuapp.com/api/v1/parts\")\n          .then((response) => {\n            setParts(response.data);\n          });\n        //console.log(response.data)\n      } catch (err) {\n        console.log(err.response.data);\n      }\n    };\n    fetchParts();\n  }, [parts, values, selectionModelParts]);\n\n  return (\n    <div style={{ height: \"71vh\", width: \"100%\" }}>\n      <DataGrid\n        rows={parts}\n        columns={partsColumns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        components={{\n          Toolbar: GridToolbar,\n        }}\n        initialState={{\n          filter: {\n            filterModel: {\n              items: [\n                {\n                  columnField: \"partName\",\n                  operatorValue: \"contains\",\n                  value: \"\",\n                },\n              ],\n            },\n          },\n        }}\n        onSelectionModelChange={(newSelectionModelParts) => {\n          setSelectionModelParts(newSelectionModelParts);\n        }}\n        selectionModel={selectionModelParts}\n      />\n\n      <div align=\"right\">\n        <br />\n        <Controls.Button text=\"Add\" onClick={() => handleOpen()} />{\" \"}\n        {first && <Controls.Button text=\"Modify\" onClick={handleModify} />}{\" \"}\n        {first && <Controls.Button text=\"Delete\" onClick={handleDeletePart} />}{\" \"}\n      </div>\n      <div>\n        {\" \"}\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style} component=\"form\" onSubmit={handleSubmit}>\n            <div align=\"center\">\n              <h2>{first ? \"Edit\" : \"Add\"} Part</h2>\n            </div>\n            <div>\n              <Controls.RadioGroup\n                name=\"partCategory\"\n                label=\"Category\"\n                value={values.partCategory}\n                onChange={handleInputChange}\n                items={partsCatergories}\n              />\n            </div>\n            <div>\n              <Controls.Input\n                name=\"partName\"\n                label=\"Part Name\"\n                value={values.partName}\n                onChange={handleInputChange}\n                error={errors.partName}\n              />\n            </div>\n\n            <div>\n              <Controls.Input\n                name=\"partStockLevel\"\n                label=\"Inventory\"\n                value={values.partStockLevel}\n                onChange={handleInputChange}\n                error={errors.partStockLevel}\n              />\n            </div>\n\n            <div>\n              <Controls.Input\n                name=\"partCost\"\n                label=\"Cost\"\n                value={values.partCost}\n                onChange={handleInputChange}\n                error={errors.partCost}\n              />\n            </div>\n            <Grid\n              container\n              rowSpacing={1}\n              columnSpacing={{\n                xs: 1,\n                sm: 2,\n                md: 3,\n              }}\n            >\n              <Grid item xs={6}>\n                <Controls.Input\n                  name=\"partMin\"\n                  label=\"Min\"\n                  variant=\"standard\"\n                  value={values.partMin}\n                  onChange={handleInputChange}\n                  fullWidth\n                  error={errors.partMin}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <Controls.Input\n                  name=\"partMax\"\n                  label=\"Max\"\n                  variant=\"standard\"\n                  value={values.partMax}\n                  onChange={handleInputChange}\n                  fullWidth\n                  error={errors.partMax}\n                />\n              </Grid>\n            </Grid>\n            <div>\n              <Controls.Input\n                name=\"partMachineId\"\n                label=\"Machine ID\"\n                variant=\"standard\"\n                value={values.partMachineId}\n                onChange={handleInputChange}\n                fullWidth\n                error={errors.partMachineId}\n              />\n            </div>\n            <br />\n            <br />\n            <div align=\"center\">\n              {first ? (\n                <Button onClick={handleEdit}>Edit</Button>\n              ) : (\n                <Button onClick={handleSubmit}>Add</Button>\n              )}\n              <Button onClick={handleClose}>Cancel</Button>\n            </div>\n          </Box>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport qs from \"qs\";\n\nconst KEYS = {\n  products: \"products\",\n  productId: \"productId\",\n};\n\nexport function insertProduct(data) {\n  let products = getAllProducts();\n  // data['id'] = generateProductId()\n  // products.push(data)\n  // localStorage.setItem(KEYS.products,JSON.stringify(products))\n  axios.post(\"https://inventoryspring.herokuapp.com/api/v1/products\", data);\n  console.log(data);\n  console.log(\"Insert Product Running\");\n}\nexport function editProduct(data) {\n  axios\n    .put(\"https://inventoryspring.herokuapp.com/api/v1/products/\" + data.id, qs.stringify(data))\n    .catch((err) => {\n      console.log(err);\n    });\n  console.log(data);\n  console.log(\"Edit Product Running\");\n}\n\nexport function generateProductId() {\n  if (localStorage.getItem(KEYS.productId) == null)\n    localStorage.setItem(KEYS.productId, \"0\");\n  var id = parseInt(localStorage.getItem(KEYS.productId));\n  localStorage.setItem(KEYS.productId, (++id).toString());\n  return id;\n}\n\nexport function getAllProducts() {\n  if (localStorage.getItem(KEYS.products) == null)\n    localStorage.setItem(KEYS.products, JSON.stringify([]));\n  return JSON.parse(localStorage.getItem(KEYS.products));\n}\n","import React, { useState, useEffect } from \"react\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport { Grid } from \"@mui/material\";\nimport Controls from \"./controls/Controls\";\nimport Button from \"@mui/material/Button\";\nimport useForm from \"./useForm\";\nimport * as productsService from \"../services/productsService\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 600,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst initialValues = {\n  id: 0,\n  productName: \"\",\n  productStockLevel: \"\",\n  productCost: \"\",\n  productMin: \"\",\n  productMax: \"\",\n  productMachineId: \"\",\n};\n\nconst productsColumns = [\n  {\n    field: \"id\",\n    headerName: \"ID\",\n    width: 70,\n  },\n  {\n    field: \"productName\",\n    headerName: \"Products Name\",\n    width: 130,\n  },\n  {\n    field: \"productStockLevel\",\n    headerName: \"Inventory\",\n    width: 130,\n  },\n  {\n    field: \"productCost\",\n    headerName: \"Cost\",\n    width: 130,\n  },\n];\n\n// Data from LocalStorage\nlet productsRows;\n\nconst productsCatergories = [\n  {\n    id: \"inhouse\",\n    title: \"In-House\",\n  },\n  {\n    id: \"outsourced\",\n    title: \"Outsourced\",\n  },\n];\nconst axios = require(\"axios\");\n\nexport default function Products(...props) {\n  const [products, setProducts] = useState(productsRows);\n  const [open, setOpen] = useState(false);\n  const [selectionModelProducts, setSelectionModelProducts] = useState([]);\n  const selectedIDs = new Set(selectionModelProducts);\n  const [first] = selectedIDs;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    if (\"productName\" in fieldValues)\n      temp.productName = fieldValues.productName\n        ? \"\"\n        : \"This field is required.\";\n    if (\"productStockLevel\" in fieldValues)\n      temp.productStockLevel = /^[0-9]+$/.test(fieldValues.productStockLevel)\n        ? \"\"\n        : \"Please enter a full number with no decimals.\";\n    if (\"productCost\" in fieldValues)\n      temp.productCost = /[+-]?([0-9]*[.])?[0-9]+/.test(fieldValues.productCost)\n        ? \"\"\n        : \"Please enter a number.\";\n    if (\"productMin\" in fieldValues)\n      temp.productMin = /^[0-9]+$/.test(fieldValues.productMin)\n        ? \"\"\n        : \"Please enter a number.\";\n    if (\"productMax\" in fieldValues)\n      temp.productMax = /^[0-9]+$/.test(fieldValues.productMax)\n        ? \"\"\n        : \"Please enter a number.\";\n    if (\"productMachineId\" in fieldValues)\n      temp.productMachineId = /^[0-9]+$/.test(fieldValues.productMachineId)\n        ? \"\"\n        : \"Please enter a number.\";\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues === values)\n      return Object.values(temp).every((x) => x === \"\");\n  };\n\n  const { values, handleInputChange, errors, setErrors, setValues } = useForm(\n    initialValues,\n    true,\n    validate\n  );\n\n  const handleDeleteProduct = (clickedProduct) => {\n    console.log(\"Deleting: \" + selectionModelProducts);\n    axios.delete(\"https://inventoryspring.herokuapp.com/api/v1/products/\" + first);\n    //setProducts((r) => r.filter((x) => !selectedIDs.has(x.id)));\n  };\n\n  const handleModify = () => {\n    const fetchValues = async () => {\n      try {\n        const response = await axios.get(\n          \"https://inventoryspring.herokuapp.com/api/v1/products/\" + first\n        );\n        console.log(response.data);\n        setValues(response.data);\n      } catch (err) {\n        console.log(err.response.data);\n      }\n    };\n    fetchValues();\n    //console.log(values)\n    handleOpen();\n  };\n  const handleOpen = (event) => {\n    //props.setTitle(\"Add Product\");\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    // props.setTitle(\"Inventory Management System\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      productsService.insertProduct(values);\n      console.log(\"Submitted \" + values);\n      handleClose();\n      //setProducts(JSON.parse(localStorage.getItem(\"products\")));\n    }\n  };\n  const handleEdit = async (e) => {\n    e.preventDefault();\n    if (validate()) {\n      productsService.editProduct(values);\n      //console.log(\"Edited \" + values);\n      handleClose();\n    }\n  };\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios\n          .get(\"https://inventoryspring.herokuapp.com/api/v1/products\")\n          .then((response) => {\n            setProducts(response.data);\n          });\n        //console.log(response.data)\n      } catch (err) {\n        console.log(err.response.data);\n      }\n    };\n    fetchProducts();\n  }, [products, values, selectionModelProducts]);\n\n  return (\n    <div style={{ height: \"71vh\", width: \"100%\" }}>\n      <DataGrid\n        rows={products}\n        columns={productsColumns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        components={{\n          Toolbar: GridToolbar,\n        }}\n        initialState={{\n          filter: {\n            filterModel: {\n              items: [\n                {\n                  columnField: \"productName\",\n                  operatorValue: \"contains\",\n                  value: \"\",\n                },\n              ],\n            },\n          },\n        }}\n        onSelectionModelChange={(newSelectionModelProducts) => {\n          setSelectionModelProducts(newSelectionModelProducts);\n        }}\n        selectionModel={selectionModelProducts}\n      />\n\n      <div align=\"right\">\n        <br />\n        <Controls.Button text=\"Add\" onClick={handleOpen} />{\" \"}\n        {first && <Controls.Button text=\"Modify\" onClick={handleModify} />}{\" \"}\n        {first && (\n          <Controls.Button text=\"Delete\" onClick={handleDeleteProduct} />\n        )}{\" \"}\n      </div>\n      <div>\n        {\" \"}\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style} component=\"form\" onSubmit={handleSubmit}>\n            <div align=\"center\">\n              <h2>Add Product</h2>\n            </div>\n            <div>\n              <Controls.Input\n                name=\"productName\"\n                label=\"Product Name\"\n                value={values.productName}\n                onChange={handleInputChange}\n                error={errors.productName}\n              />\n            </div>\n\n            <div>\n              <Controls.Input\n                name=\"productStockLevel\"\n                label=\"Inventory\"\n                value={values.productStockLevel}\n                onChange={handleInputChange}\n                error={errors.productStockLevel}\n              />\n            </div>\n\n            <div>\n              <Controls.Input\n                name=\"productCost\"\n                label=\"Cost\"\n                value={values.productCost}\n                onChange={handleInputChange}\n                error={errors.productCost}\n              />\n            </div>\n            <Grid\n              container\n              rowSpacing={1}\n              columnSpacing={{\n                xs: 1,\n                sm: 2,\n                md: 3,\n              }}\n            >\n              <Grid item xs={6}>\n                <Controls.Input\n                  name=\"productMin\"\n                  label=\"Min\"\n                  variant=\"standard\"\n                  value={values.productMin}\n                  onChange={handleInputChange}\n                  fullWidth\n                  error={errors.productMin}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <Controls.Input\n                  name=\"productMax\"\n                  label=\"Max\"\n                  variant=\"standard\"\n                  value={values.productMax}\n                  onChange={handleInputChange}\n                  fullWidth\n                  error={errors.productMax}\n                />\n              </Grid>\n            </Grid>\n            <div>\n              <Controls.Input\n                name=\"productMachineId\"\n                label=\"Machine ID\"\n                variant=\"standard\"\n                value={values.productMachineId}\n                onChange={handleInputChange}\n                fullWidth\n                error={errors.productMachineId}\n              />\n            </div>\n            <br />\n            <br />\n            <div align=\"center\">\n              {first ? (\n                <Button onClick={handleEdit}>Edit</Button>\n              ) : (\n                <Button onClick={handleSubmit}>Add</Button>\n              )}\n              <Button onClick={handleClose}>Cancel</Button>\n            </div>\n          </Box>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport { styled } from \"@mui/material/styles\";\nimport Parts from \"./components/Parts\";\nimport Products from \"./components/Products\";\nimport Box from \"@mui/material/Box\";\n\nconst App = () => {\n\n  const Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  }));\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <div align=\"center\">\n        <Item>\n          <h1>Inventory Management System</h1>\n        </Item>\n      </div>\n      <br />\n      <Grid\n        container\n        rowSpacing={1}\n        columnSpacing={{\n          xs: 1,\n          sm: 2,\n          md: 3,\n        }}\n      >\n        <Grid item xs={6}>\n          <Item>\n            <h1>Parts</h1>\n            <div\n              style={{\n                height: \"76vh\",\n                width: \"100%\",\n              }}\n            >\n              <Parts />\n            </div>\n            <br />\n          </Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>\n            <h1>Products</h1>\n            <div\n              style={{\n                height: \"76vh\",\n                width: \"100%\",\n              }}\n            >\n              <Products />\n            </div>\n            <br />\n          </Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}